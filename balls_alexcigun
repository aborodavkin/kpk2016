from random import randrange as rnd
from tkinter import *
from random import choice
import math
#import winsound отключил, потому что в Linux'е не работает
import time

current_score = 0

def tick():
    global time_finish,flag_t, scores
    # Количество минут и секунд
    time_test = round(time_finish-time.time())
    m = time_test // 60
    s = time_test % 60
    if time_test >= 0:
        change_timer(m, s)
        delay = 1000
        canv.after(delay, tick)
        # Конец блока минут и секунд
    if time_test == 0:
        flag_t = 1
        # create a child/top window
        win_top = Toplevel(bg='lightgreen')
        win_top.title('The end!')
        win_top.geometry("700x85+300+150")
        Label(win_top,
		 text='Your score: ' + str(scores),
		 fg = "green",
		 bg = "lawngreen",
		 font = "Verdana 30 bold").pack()
        win_top.mainloop()


class ball():
    def __init__(self):
        x = self.x = 0
        y = self.y = 0
        r = self.r = 0
        self.nap = 0
        self.nx=0
        self.ny=0
        self.width = 0
        self.color = ''
        self.pen_color = ''
        self.id = canv.create_oval(x-r,y-r,x+r,y+r, width = self.width, fill = self.color, outline = self.pen_color)


    def paint(self):
        x = self.x
        y = self.y
        r = self.r
        canv.coords(self.id, x-r, y-r, x+r, y+r)
        canv.itemconfig (self.id, width=self.width, fill=self.color, outline=self.pen_color)


def create_timer():
    global time_str, time_ost_text, time_finish
    # Количество минут и секунд
    time_test = round(time_finish-time.time())
    m = time_test // 60
    s = time_test % 60
    time_str = 'min: '+str(m)+' sec: '+str(s)
    time_ost_text = canv.create_text(600, 30,
                                     text="Time left " + time_str,
                                     font="Sans 18", fill='white')


def change_timer(m,s):
    global time_ost_text
    time_str = str(m)+' min. '+str(s)+' sec.'
    canv.itemconfigure(time_ost_text, text="Time left: " + time_str)


def create_scores_text():
    global scores_text
    scores_text = canv.create_text(120, 30,
                                     text="Your score: " + str(scores),
                                     font="Sans 18", fill='white')


def change_scores_text():
    canv.itemconfigure(scores_text, text="Your score: " + str(scores))


def click_ball(event):
    global scores, w, h, balls, flag_t, current_score
    """ Обработчик событий мышки для игрового холста canvas
    param event: событие с координатами клика
    По клику мышкой нужно удалять тот объект, на который мышка указывает.
    А также засчитывать его в очки пользователя.
    """
    obj = canv.find_closest(event.x, event.y)
    ball_id = obj[0]
    for b in balls:
        if b.id == ball_id:
            ball_color = b.color
    try:
        x1, y1, x2, y2 = canv.coords(obj)
        radius = math.sqrt((x2-x1)**2+(y2-y1)**2)/2
        delta_scores = int(150/radius)
    except:
        x1, y1, x2, y2 = 0, 0, 0, 0
    if x1 <= event.x <= x2 and y1 <= event.y <= y2 and flag_t == 0: # Блок на возрастание очков при времени =0
        #winsound.Beep(400, 50)
        #  Звук в Linux не работает!!!
        if ball_color == 'chartreuse':
            delta_scores += 10
        elif ball_color == 'pink':
            delta_scores += 15
        scores += delta_scores
        change_scores_text()
        canv.delete(obj)
        current_score = delta_scores
        for b in balls:
            if b.id == ball_id:
                del b  # Удалили объект, в который попали
            Label(canv,
		        text=str(current_score),
		        bg="darkblue",
                fg="white",
		        font="Verdana 10 bold").place(x=event.x, y=event.y, relwidth=0.03, relheight=0.03, anchor=NE)
        # Создаем новый шарик
        new_ball = ball()
        new_ball.x = rnd(50,w-50)
        new_ball.y = rnd(50,h-50)
        new_ball.r = rnd(10,50)
        new_ball.nap = rnd(1,4)
        new_ball.nx = 1
        new_ball.ny = 1
        new_ball.color = choice(['lemonchiffon', 'olivedrab', 'ivory', 'powderblue', 'darkslategray', 'orange',
                  'pink', 'gold', 'red','yellow', 'violet', 'indigo', 'chartreuse', 'lime'])
        balls += [new_ball]
        print(new_ball.id, new_ball.color)


def time_event():
    global balls, w,h    
    """ передвигает все шарики на чуть-чуть """
    for b in balls:
        if b.nx == 1 and b.ny == 1:
            dx = 1
            dy = 1
        elif b.nx == -1 and b.ny == 1:
            dx = -1
            dy = 1
        elif b.nx == 1 and b.ny == -1:
            dx = 1
            dy = -1
        else:
            dx = -1
            dy = -1
        # Двигаем шарики
        b.x = b.x + dx
        b.y = b.y + dy
        if b.x > w - b.r:
            # Выход из окна вправо
            b.nx = -1
        if b.x < b.r:
            # Выход из окна влево
            b.nx = 1
        if b.y > h - b.r:
            b.ny = -1
            # Выход из окна вниз
        if b.y < b.r:
            # Выход из окна вверх
            b.ny = 1
         # Перерисовка шариков
        b.paint()
    if flag_t == 0:
        canv.after(10, time_event) # Двигаем шары при наличии времени


time_finish = time.time()+10
flag_t = 0 # Флаг времени
root = Tk()
w = 800
h = 600
root.geometry("%dx%d" % (w, h))
canv = Canvas(root, bg='darkblue')
canv.pack(fill=BOTH, expand=1)
scores = 0
balls = []
colors = ['aqua', 'blue', 'fuchsia', 'green', 'maroon', 'orange', 'lawngreen', 'lightseagreen', 'deeppink', 'crimson',
                  'pink', 'purple', 'red','yellow', 'violet', 'indigo', 'chartreuse', 'lime', 'hotpink', 'khaki']
# Создаем шарики!!!
for z in range(20):
    new_ball = ball()
    new_ball.x = rnd(50, w-50)
    new_ball.y = rnd(50, h-50)
    new_ball.r = rnd(10, 50)
    new_ball.nap = rnd(1, 4)
    new_ball.color = colors[z]
    if new_ball.nap == 1:
        new_ball.nx = 1
        new_ball.ny = 1
    if new_ball.nap == 2:
        new_ball.nx = 1
        new_ball.ny = -1
    if new_ball.nap == 3:
        new_ball.nx = -1
        new_ball.ny = -1
    else:
        new_ball.nx = -1
        new_ball.ny = 1
    print(new_ball.id, new_ball.color)
    balls += [new_ball]
for b in balls:
    b.paint()
create_scores_text()
create_timer()
delay = 1000
canv.after(delay, tick)
time_event()
canv.bind("<Button>", click_ball)

mainloop()
